{# @var craft \craft\web\twig\variables\CraftVariable #}
{# @var entry \craft\elements\Entry #}
{# ======================================================
  @filename: _layout
  @date:     288 Oct 2019
  ====================================================== #}
{#
  Base layout file containing the head and the body of your site
#}

{# {% import "_partials/_macros.twig" as macro %} #}
{# uncomment line above if you need to use macros in your template #}

{%- minify -%}
{% set baseUrl = alias('@baseUrl') ~ '/' %}
{% set inlineJs = alias('@inlineJs') ~ '/' %}
{% set inlineSvg = alias('@inlineSvg') ~ '/' %}
{% set inlineCss = alias('@inlineCss') ~ '/' %}

{% header "Link: <#{baseUrl}>; rel=dns-prefetch;,<#{baseUrl}>; rel=preconnect; crossorigin;" %}
<!DOCTYPE html>
{%- endminify -%}
<html lang="{{ craft.app.language |slice(0,2) }}" prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb#">
{%- minify -%}
<head>
  <link rel="dns-prefetch" href="{{ baseUrl }}">
  <link rel="preconnect" href="{{ baseUrl }}" crossorigin>

  {# -- Any <link> tags that should be included in the header #}
  {% block _head_links %}
  {% endblock %}

  {% import "_partials/_macros.twig" as macro %}
  {% include "_partials/_global_header.twig" %}

  {# -- ServiceWorker, tabhandler -- #}
  <script>
    {% if craft.app.config.general.isSystemLive %}
    {{ source("#{inlineJs}/register-service-worker.min.js") }}
    {% endif %}
    {{ source("#{inlineJs}/tab-handler.min.js") }}
  </script>

  {% if craft.app.config.general.isSystemLive and not craft.app.config.general.devMode %}
    {% set cacheVal = getCookie('critical-css') %}
    {% set cssHash = craft.twigpack.getModuleHash("styles.min.css") %}
    {% set critical %}
      {{ craft.twigpack.includeCriticalCssTags() }}
    {% endset %}
    {% if critical|trim|length and (not cacheVal or cacheVal != cssHash) %}
      {# We have a critical css file, no cookie or cookie has different hash -> use critical css #}
      {% do setCookie('critical-css', cssHash, now | date_modify("+7 days").timestamp ) %}
      {{ critical }}
      {{ craft.twigpack.includeCssModule("styles.min.css", true) }}
    {% else %}
      {# No file found or cookie is set, so assume css file is cached #}
      {{ craft.twigpack.includeCssModule("styles.min.css") }}
    {% endif %}
  {% else %}
    {# Dev mode #}
    {{ craft.twigpack.includeCssModule("styles.min.css") }}
  {% endif %}

  {{ craft.twigpack.includeSafariNomoduleFix() }}
  {{ craft.twigpack.includeJsModule("main.js", true) }}

  {% if not craft.app.config.general.devMode %}
    {# -- Google Analytics -- #}
    <script>
      (function(i, s, o, g, r, a, m) {
        i['GoogleAnalyticsObject'] = r;
        i[r] = i[r] || function() {
          (i[r].q = i[r].q || []).push(arguments);
        }, i[r].l = 1 * new Date();
        a = s.createElement(o), m = s.getElementsByTagName(o)[0];
        a.async = 1;
        a.src = g;
        m.parentNode.insertBefore(a, m);
      })(window, document, 'script', '/assets/js/analytics.js', 'ga');
      ga('create', 'UA-160829055-1', 'auto');
      ga('require', 'displayfeatures');
      ga('send', 'pageview');
    </script>

    <!-- Hotjar Tracking Code for https://www.biljoenbad.nl -->
    <script>
      (function(h,o,t,j,a,r){
        h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};
        h._hjSettings={hjid:1732606,hjsv:6};
        a=o.getElementsByTagName('head')[0];
        r=o.createElement('script');r.async=1;
        r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;
        a.appendChild(r);
      })(window,document,'https://static.hotjar.com/c/hotjar-','.js?sv=');
    </script>

  {% endif %}

  {# -- PictureFill polyfill -- #}
  <script>
    var testImg = document.createElement('img');
    if (!('srcset' in testImg) || !('sizes' in testImg)) {
      document.createElement('picture');
      var s = document.createElement('script');
      s.setAttribute('src', '/assets/js/picturefill.min.js');
      if ('async' in s) {
        s.setAttribute('async', true);
      }
      document.head.appendChild(s);
    }
  </script>

  {# -- SVG use support for IE #}
  <script async defer src="/assets/js/svgxuse.min.js"></script>
  {# -- Lazy sizes #}
  <script async defer src="/assets/js/lazysizes.min.js"></script>

  {# -- </head> JS -- #}
  {% block _head_js %}
  {% endblock %}

</head>

{% set contactClass = '' %}
{% if contactBlockClass is defined %}
  {% set contactClass = contactBlockClass %}
{% endif %}

{# -- HTML Body -- #}
<body class="sticky-nav">
<header>
  {% block header %}
    <div class="container">
      {% include '_partials/_global/main-menu' %}
    </div>
  {% endblock %}
</header>
<main>
  {# Content goes here #}
  {% block content %}{% endblock %}

  {% set contactTitle = entry is defined and entry['contactBlockTitle'] is defined and entry.contactBlockTitle | length ? entry.contactBlockTitle : contact.contactBlockHeading %}
  {% set showContact = entry is defined and entry['contactBlockShow'] is defined ? entry.contactBlockShow : true %}

  {% include '_partials/_components/contact-block/contact-block.twig' with {
    title: showContact == true ? contactTitle : '',
    phone: showContact == true and contact.contactBlockPhone | length ? contact.contactBlockPhone : '',
    cta: showContact == true and contact.contactBlockCta.url | length ? contact.contactBlockCta : '',
    wave: true,
    class: contactClass
  } %}
</main>
<footer>
  {% block footer %}
    <div class="bg-teal pt-4 pb-md-4 pb-lg-4 pt-lg-5">
        {% include '_partials/_global/footer' %}
    </div>
  {% endblock %}
</footer>

{# -- Inline JS -- #}
{% block _inline_js %}
{% endblock %}

{{ craft.twigpack.includeSafariNomoduleFix() }}
<script async type="module" src="{{ craft.twigpack.getModuleUri('main-module.js') }}"></script>
{% if craft.app.config.env != 'dev' %}
  <script nomodule src="{{ craft.twigpack.getModuleUri('main-es5.js') }}"></script>
{% endif %}


{% if craft.gdpr.getCookie('gdprYoutube') %}
  <script>
    var tag = document.createElement('script');
    tag.src = '//www.youtube.com/iframe_api';
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
  </script>
{% endif %}
<script>
  function onYouTubeIframeAPIReady() {
    var youtubePlayers = document.querySelectorAll('.js-youtube');

    for (var a = 0; a < youtubePlayers.length; a++) {

      new YT.Player(youtubePlayers[a].id, {
        width: '100%',
        videoId: youtubePlayers[a].getAttribute('data-url'),
        playerVars: {
          rel: 0,
          autoplay: !!youtubePlayers[a].getAttribute('data-autoplay') &&
            youtubePlayers[a].getAttribute('data-autoplay'),
          controls: 1,
        },
      });
    }
  }
</script>

{%- endminify -%}
</body>
</html>
